/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.settings;

import commandline.CommandLineThread;
import java.awt.Dimension;
import java.awt.Toolkit;
import settings.GeneralSettings;
import static settings.GeneralSettings.*;
import java.io.IOException;
import javax.swing.JOptionPane;
import view.main.MainWindow;

/**
 *
 * @author christiancolbach
 */
public class SettingsWindow extends javax.swing.JFrame {

    private final GeneralSettings settings;
    private final MainWindow main;

    /**
     * Creates new form SettingsWindow
     */
    public SettingsWindow(MainWindow main) {
        initComponents();
        if (CommandLineThread.getCommandLinePrompt() != null) {
            startPromptButton.setEnabled(false);
        }
        this.main = main;
        this.settings = GeneralSettings.getInstance();
        this.viewAdditionalHelpCheckBox.setSelected(this.settings.getBoolean(VIEW_ADDITIONAL_HELP_KEY, true));
        this.viewWarnIfClosedWithoutSavingCheckBox.setSelected(this.settings.getBoolean(WARN_IF_PROJECT_NOT_SAVED_KEY, true));
        this.checkProjectsBeforRunCheckBox.setSelected(this.settings.getBoolean(CHECK_PROJECTS_BEFOR_RUN_KEY, true));
        this.autoStartPromptCheckBox.setSelected(this.settings.getBoolean(START_PROMPT_ON_STARTUP_KEY, START_PROMPT_ON_STARTUP_DEFAULT_VALUE));
        this.invisiblePromptCheckBox.setSelected(this.settings.getBoolean(INVISIBLE_PROMPT_KEY, false));
        this.checkForUnreachableNodesCheckBox.setSelected(this.settings.getBoolean(CHECK_FOR_UNREACHABLE_NODES_KEY, true));
        this.showExperimentalNodeDefinitionsCheckBox.setSelected(this.settings.getBoolean(EXPERIMENTAL_NODE_DEFINITIONS_KEY, EXPERIMENTAL_NODE_DEFINITIONS_VALUE));
        this.showComposedNodeDefininitionsCheckBox.setSelected(this.settings.getBoolean(COMPOSED_NODE_DEFINITIONS_KEY, COMPOSED_NODE_DEFINITIONS_VALUE));
        updateDisabledFields();
        String backgroundValue = settings.getString(VIEW_BACKGROUND_KEY, VIEW_BACKGROUND_VALUE_DEFAULT);
        if (backgroundValue.trim().equalsIgnoreCase(VIEW_BACKGROUND_VALUE_DEFAULT)) {
            backgroundDefaultRadioButton.setSelected(true);
        } else if (backgroundValue.trim().equalsIgnoreCase(VIEW_BACKGROUND_VALUE_BLUEPRINT)) {
            backgroundBlueprintRadioButton.setSelected(true);
        } else if (backgroundValue.trim().equalsIgnoreCase(VIEW_BACKGROUND_VALUE_BLANK)) {
            backgroundBlankRadioButton.setSelected(true);
        }

        // Fenster mittig plazieren...
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width / 2 - getSize().width / 2, dim.height / 2 - getSize().height / 2);

    }

    public final void updateDisabledFields() {
        if (checkProjectsBeforRunCheckBox.isSelected()) {
            checkForUnreachableNodesCheckBox.setEnabled(true);
        } else {
            checkForUnreachableNodesCheckBox.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        viewAdditionalHelpCheckBox = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backgroundDefaultRadioButton = new javax.swing.JRadioButton();
        backgroundBlueprintRadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        viewWarnIfClosedWithoutSavingCheckBox = new javax.swing.JCheckBox();
        checkProjectsBeforRunCheckBox = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        autoStartPromptCheckBox = new javax.swing.JCheckBox();
        startPromptButton = new javax.swing.JButton();
        invisiblePromptCheckBox = new javax.swing.JCheckBox();
        checkForUnreachableNodesCheckBox = new javax.swing.JCheckBox();
        backgroundBlankRadioButton = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        showExperimentalNodeDefinitionsCheckBox = new javax.swing.JCheckBox();
        showComposedNodeDefininitionsCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Einstellungen");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Hilfe:");

        viewAdditionalHelpCheckBox.setText("Zusätzliche Hilfe einblenden (unten rechts)");
        viewAdditionalHelpCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAdditionalHelpCheckBoxActionPerformed(evt);
            }
        });

        jButton2.setText("Erweitert");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Design:");

        backgroundButtonGroup.add(backgroundDefaultRadioButton);
        backgroundDefaultRadioButton.setText("Standard");
        backgroundDefaultRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundDefaultRadioButtonActionPerformed(evt);
            }
        });

        backgroundButtonGroup.add(backgroundBlueprintRadioButton);
        backgroundBlueprintRadioButton.setText("Blueprint");

        jLabel3.setText("Warnungen:");

        viewWarnIfClosedWithoutSavingCheckBox.setText("Speichern-Dialog beim Schliessen");
        viewWarnIfClosedWithoutSavingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewWarnIfClosedWithoutSavingCheckBoxActionPerformed(evt);
            }
        });

        checkProjectsBeforRunCheckBox.setText("Projekte vor Start auf potentielle Probleme und Fehler überprüfen");
        checkProjectsBeforRunCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkProjectsBeforRunCheckBoxActionPerformed(evt);
            }
        });

        jLabel4.setText("Prompt:");

        autoStartPromptCheckBox.setText("Prompt automatisch beim Start starten");

        startPromptButton.setText("Prompt starten");
        startPromptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startPromptButtonActionPerformed(evt);
            }
        });

        invisiblePromptCheckBox.setText("Unsichtbarer Prompt (Eingabe ohne > )");

        checkForUnreachableNodesCheckBox.setText("Nach unerreichbaren Elementen suchen");

        backgroundButtonGroup.add(backgroundBlankRadioButton);
        backgroundBlankRadioButton.setText("Weiß (Gut für neutrale Bildschirmfoto)");

        jLabel5.setText("Elemente:");

        showExperimentalNodeDefinitionsCheckBox.setText("Experimentelle Elemente anzeigen");

        showComposedNodeDefininitionsCheckBox.setText("Zusammengesetzte Elemente anzeigen");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(viewWarnIfClosedWithoutSavingCheckBox)
                    .addComponent(viewAdditionalHelpCheckBox)
                    .addComponent(checkProjectsBeforRunCheckBox)
                    .addComponent(jLabel4)
                    .addComponent(autoStartPromptCheckBox)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backgroundDefaultRadioButton)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backgroundBlueprintRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backgroundBlankRadioButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(invisiblePromptCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startPromptButton))
                    .addComponent(checkForUnreachableNodesCheckBox)
                    .addComponent(jLabel5)
                    .addComponent(showExperimentalNodeDefinitionsCheckBox)
                    .addComponent(showComposedNodeDefininitionsCheckBox))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewAdditionalHelpCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewWarnIfClosedWithoutSavingCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkProjectsBeforRunCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkForUnreachableNodesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backgroundDefaultRadioButton)
                    .addComponent(backgroundBlueprintRadioButton)
                    .addComponent(backgroundBlankRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoStartPromptCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invisiblePromptCheckBox)
                    .addComponent(startPromptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showExperimentalNodeDefinitionsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showComposedNodeDefininitionsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            settings.set(VIEW_ADDITIONAL_HELP_KEY, viewAdditionalHelpCheckBox.isSelected());
            settings.set(WARN_IF_PROJECT_NOT_SAVED_KEY, viewWarnIfClosedWithoutSavingCheckBox.isSelected());
            settings.set(CHECK_PROJECTS_BEFOR_RUN_KEY, checkProjectsBeforRunCheckBox.isSelected());
            settings.set(START_PROMPT_ON_STARTUP_KEY, autoStartPromptCheckBox.isSelected());
            settings.set(INVISIBLE_PROMPT_KEY, invisiblePromptCheckBox.isSelected());
            settings.set(CHECK_FOR_UNREACHABLE_NODES_KEY, checkForUnreachableNodesCheckBox.isSelected());
            settings.set(EXPERIMENTAL_NODE_DEFINITIONS_KEY, showExperimentalNodeDefinitionsCheckBox.isSelected());
            settings.set(COMPOSED_NODE_DEFINITIONS_KEY, showComposedNodeDefininitionsCheckBox.isSelected());
            if (backgroundDefaultRadioButton.isSelected()) {
                settings.set(VIEW_BACKGROUND_KEY, VIEW_BACKGROUND_VALUE_DEFAULT);
            } else if (backgroundBlueprintRadioButton.isSelected()) {
                settings.set(VIEW_BACKGROUND_KEY, VIEW_BACKGROUND_VALUE_BLUEPRINT);
            } else if (backgroundBlankRadioButton.isSelected()) {
                settings.set(VIEW_BACKGROUND_KEY, VIEW_BACKGROUND_VALUE_BLANK);
            }
            settings.writeSettingsToSettingsFile();
            main.repaint();
            dispose();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Schreiben in Datei fehlgeschlagen! (" + ex.getLocalizedMessage() + ")", "Fehler", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        main.openAdvancedSettingsWindow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backgroundDefaultRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundDefaultRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backgroundDefaultRadioButtonActionPerformed

    private void viewWarnIfClosedWithoutSavingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewWarnIfClosedWithoutSavingCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewWarnIfClosedWithoutSavingCheckBoxActionPerformed

    private void viewAdditionalHelpCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAdditionalHelpCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewAdditionalHelpCheckBoxActionPerformed

    private void checkProjectsBeforRunCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkProjectsBeforRunCheckBoxActionPerformed
        updateDisabledFields();
    }//GEN-LAST:event_checkProjectsBeforRunCheckBoxActionPerformed

    private void startPromptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startPromptButtonActionPerformed
        CommandLineThread.launchInstance();
        startPromptButton.setEnabled(false);
    }//GEN-LAST:event_startPromptButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoStartPromptCheckBox;
    private javax.swing.JRadioButton backgroundBlankRadioButton;
    private javax.swing.JRadioButton backgroundBlueprintRadioButton;
    private javax.swing.ButtonGroup backgroundButtonGroup;
    private javax.swing.JRadioButton backgroundDefaultRadioButton;
    private javax.swing.JCheckBox checkForUnreachableNodesCheckBox;
    private javax.swing.JCheckBox checkProjectsBeforRunCheckBox;
    private javax.swing.JCheckBox invisiblePromptCheckBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox showComposedNodeDefininitionsCheckBox;
    private javax.swing.JCheckBox showExperimentalNodeDefinitionsCheckBox;
    private javax.swing.JButton startPromptButton;
    private javax.swing.JCheckBox viewAdditionalHelpCheckBox;
    private javax.swing.JCheckBox viewWarnIfClosedWithoutSavingCheckBox;
    // End of variables declaration//GEN-END:variables
}
