/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.settings;

import java.awt.Dimension;
import java.awt.Toolkit;
import settings.GeneralSettings;
import static settings.GeneralSettings.*;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import view.main.MainWindow;

/**
 *
 * @author christiancolbach
 */
public class AdvancedSettingsWindow extends javax.swing.JFrame {

    private final GeneralSettings settings;
    private final MainWindow main;

    /**
     * Creates new form SettingsWindow
     */
    public AdvancedSettingsWindow(MainWindow main) {
        initComponents();
        this.settings = GeneralSettings.getInstance();
        this.startGUICheckBox.setSelected(this.settings.getBoolean(START_GUI_ON_STARTUP_KEY, START_GUI_ON_STARTUP_DEFAULT_VALUE));
        this.nodeCollectionAutoDisposeOnDoubleClickCheckBox.setSelected(this.settings.getBoolean(VIEW_NODECOLLECTION_AUTODISPOSE_OND_OUBLECLICK_KEY, true));
        this.useNimbusLAFCheckBox.setSelected(this.settings.getBoolean(VIEW_USE_NIMBUS_LAF_KEY, false));
        this.advancedTestingCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_ADVANCED_TESTING_KEY, false));
        this.redrawCounterCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_REDRAW_COUNTER_KEY, false));
        this.logRedrawCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_LOG_REDRAW_KEY, false));
        this.targetCoordinatesCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_TARGET_COORDINATES_KEY, false));
        this.mouseCoordinatesCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_MOUSE_COORDINATES_KEY, false));
        this.logToFileCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_LOG_TO_FILE_KEY, false));
        this.logMoreCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_LOG_MORE_KEY, false));
        this.logOnlyErrorsToFileCheckBox.setEnabled(logToFileCheckBox.isSelected());
        this.nodeCountCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_NODE_COUNT_KEY, false));
        this.additionalChecksCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_ADDITIONAL_CHECKS_KEY, DEVELOPER_ADDITIONAL_CHECKS_DEFAULT));
        this.executionRingStackSizeTextField.setText(String.valueOf(this.settings.getInt(DEVELOPER_RING_STACK_SIZE_FOR_EXECUTION_LOGGER, 2000)));
        this.generalRingStackSizeTextField.setText(String.valueOf(this.settings.getInt(DEVELOPER_RING_STACK_SIZE_FOR_GENERAL_LOGGER, 200)));
        this.autoRedrawEverySecondCheckBox.setSelected(this.settings.getBoolean(DEVELOPER_AUTO_REDRAW_EVERY_SECOND_KEY, DEVELOPER_AUTO_REDRAW_EVERY_SECOND_VALUE));
        this.main = main;

        // Fenster mittig plazieren...
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width / 2 - getSize().width / 2, dim.height / 2 - getSize().height / 2);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        redrawCounterCheckBox = new javax.swing.JCheckBox();
        logRedrawCheckBox = new javax.swing.JCheckBox();
        targetCoordinatesCheckBox = new javax.swing.JCheckBox();
        logToFileCheckBox = new javax.swing.JCheckBox();
        logOnlyErrorsToFileCheckBox = new javax.swing.JCheckBox();
        logMoreCheckBox = new javax.swing.JCheckBox();
        mouseCoordinatesCheckBox = new javax.swing.JCheckBox();
        nodeCountCheckBox = new javax.swing.JCheckBox();
        advancedTestingCheckBox = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        generalRingStackSizeTextField = new javax.swing.JTextField();
        executionRingStackSizeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nodeCollectionAutoDisposeOnDoubleClickCheckBox = new javax.swing.JCheckBox();
        useNimbusLAFCheckBox = new javax.swing.JCheckBox();
        additionalChecksCheckBox = new javax.swing.JCheckBox();
        startGUICheckBox = new javax.swing.JCheckBox();
        autoRedrawEverySecondCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Erweitert");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Entwickler:");

        redrawCounterCheckBox.setText("Redraw Counter");
        redrawCounterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redrawCounterCheckBoxActionPerformed(evt);
            }
        });

        logRedrawCheckBox.setText("Redraw loggen");

        targetCoordinatesCheckBox.setText("Ziel Koordinaten anzeigen");

        logToFileCheckBox.setText("Ausgaben in Datei speichern");
        logToFileCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logToFileCheckBoxActionPerformed(evt);
            }
        });

        logOnlyErrorsToFileCheckBox.setText("Nur Fehler in Datei speichern");

        logMoreCheckBox.setText("Mehr Ausgaben");

        mouseCoordinatesCheckBox.setText("Maus Koordinaten anzeigen");

        nodeCountCheckBox.setText("Anzahl Elemente anzeigen");

        advancedTestingCheckBox.setText("Funktionen zum erweiterten Testen");
        advancedTestingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedTestingCheckBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Ring-Stack-Grösse für generellen Logger:");

        jLabel3.setText("Ring-Stack-Grösse für Execution-Logger:");

        generalRingStackSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generalRingStackSizeTextFieldActionPerformed(evt);
            }
        });

        executionRingStackSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executionRingStackSizeTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        jLabel4.setText("(Manche Änderungen werden erst ab nächsten Start aktiv)");

        jLabel5.setText("Benutzerinterface:");

        nodeCollectionAutoDisposeOnDoubleClickCheckBox.setText("Element-Auswahl-Fenster automatisch bei Doppelklick auf Element schliessen");

        useNimbusLAFCheckBox.setText("Nimbus-LAF anstelle von System-LAF benutzen (betrifft nur wenige UI-Elemente, erfordert Neustart)");
        useNimbusLAFCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useNimbusLAFCheckBoxActionPerformed(evt);
            }
        });

        additionalChecksCheckBox.setText("Zusätzliche Fehler-Prüfungen");
        additionalChecksCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                additionalChecksCheckBoxActionPerformed(evt);
            }
        });

        startGUICheckBox.setText("GUI automatisch starten (Achtung: Diese Einstellung kann dazu führen dazu dass kein Fenster mehr sichtbar ist)");
        startGUICheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGUICheckBoxActionPerformed(evt);
            }
        });

        autoRedrawEverySecondCheckBox.setText("Auto Redraw Every Second");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(startGUICheckBox)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(generalRingStackSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(logOnlyErrorsToFileCheckBox)
                            .addComponent(logMoreCheckBox)
                            .addComponent(logToFileCheckBox)
                            .addComponent(nodeCountCheckBox)
                            .addComponent(advancedTestingCheckBox)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(executionRingStackSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(useNimbusLAFCheckBox)
                            .addComponent(mouseCoordinatesCheckBox)
                            .addComponent(targetCoordinatesCheckBox)
                            .addComponent(redrawCounterCheckBox)
                            .addComponent(logRedrawCheckBox)
                            .addComponent(additionalChecksCheckBox)
                            .addComponent(jLabel1)
                            .addComponent(nodeCollectionAutoDisposeOnDoubleClickCheckBox)
                            .addComponent(autoRedrawEverySecondCheckBox))
                        .addGap(0, 58, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startGUICheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nodeCollectionAutoDisposeOnDoubleClickCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useNimbusLAFCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoRedrawEverySecondCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(advancedTestingCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(redrawCounterCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logRedrawCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(targetCoordinatesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mouseCoordinatesCheckBox)
                .addGap(8, 8, 8)
                .addComponent(logToFileCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logOnlyErrorsToFileCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logMoreCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(additionalChecksCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nodeCountCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(generalRingStackSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(executionRingStackSizeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel4)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            settings.set(START_GUI_ON_STARTUP_KEY, startGUICheckBox.isSelected());
            settings.set(VIEW_NODECOLLECTION_AUTODISPOSE_OND_OUBLECLICK_KEY, nodeCollectionAutoDisposeOnDoubleClickCheckBox.isSelected());
            settings.set(VIEW_USE_NIMBUS_LAF_KEY, useNimbusLAFCheckBox.isSelected());
            settings.set(DEVELOPER_ADVANCED_TESTING_KEY, advancedTestingCheckBox.isSelected());
            settings.set(DEVELOPER_REDRAW_COUNTER_KEY, redrawCounterCheckBox.isSelected());
            settings.set(DEVELOPER_LOG_REDRAW_KEY, logRedrawCheckBox.isSelected());
            settings.set(DEVELOPER_TARGET_COORDINATES_KEY, targetCoordinatesCheckBox.isSelected());
            settings.set(DEVELOPER_MOUSE_COORDINATES_KEY, mouseCoordinatesCheckBox.isSelected());
            settings.set(DEVELOPER_ADDITIONAL_CHECKS_KEY, additionalChecksCheckBox.isSelected());
            settings.set(DEVELOPER_LOG_TO_FILE_KEY, logToFileCheckBox.isSelected());
            settings.set(DEVELOPER_LOG_ONLY_ERRORS_TO_FILE_KEY, logOnlyErrorsToFileCheckBox.isSelected());
            settings.set(DEVELOPER_LOG_MORE_KEY, logMoreCheckBox.isSelected());
            settings.set(DEVELOPER_NODE_COUNT_KEY, nodeCountCheckBox.isSelected());
            settings.set(DEVELOPER_AUTO_REDRAW_EVERY_SECOND_KEY, autoRedrawEverySecondCheckBox.isSelected());
            try {
                settings.set(DEVELOPER_RING_STACK_SIZE_FOR_EXECUTION_LOGGER, Integer.valueOf(executionRingStackSizeTextField.getText()));
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(main,
                        executionRingStackSizeTextField.getText() + " kann nicht in natürliche umgewandelt werden",
                        "Fehler",
                        JOptionPane.ERROR_MESSAGE);
            }
            try {
                settings.set(DEVELOPER_RING_STACK_SIZE_FOR_GENERAL_LOGGER, Integer.valueOf(generalRingStackSizeTextField.getText()));
            } catch (NumberFormatException numberFormatException) {
                JOptionPane.showMessageDialog(main,
                        generalRingStackSizeTextField.getText() + " kann nicht in natürliche umgewandelt werden",
                        "Fehler",
                        JOptionPane.ERROR_MESSAGE);
            }
            settings.writeSettingsToSettingsFile();
            dispose();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Schreiben in Datei fehlgeschlagen! (" + ex.getLocalizedMessage() + ")", "Fehler", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void redrawCounterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redrawCounterCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_redrawCounterCheckBoxActionPerformed

    private void logToFileCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logToFileCheckBoxActionPerformed
        logOnlyErrorsToFileCheckBox.setEnabled(logToFileCheckBox.isSelected());
    }//GEN-LAST:event_logToFileCheckBoxActionPerformed

    private void advancedTestingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedTestingCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_advancedTestingCheckBoxActionPerformed

    private void generalRingStackSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generalRingStackSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generalRingStackSizeTextFieldActionPerformed

    private void executionRingStackSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executionRingStackSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_executionRingStackSizeTextFieldActionPerformed

    private void useNimbusLAFCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useNimbusLAFCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_useNimbusLAFCheckBoxActionPerformed

    private void additionalChecksCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_additionalChecksCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_additionalChecksCheckBoxActionPerformed

    private void startGUICheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGUICheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startGUICheckBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox additionalChecksCheckBox;
    private javax.swing.JCheckBox advancedTestingCheckBox;
    private javax.swing.JCheckBox autoRedrawEverySecondCheckBox;
    private javax.swing.JTextField executionRingStackSizeTextField;
    private javax.swing.JTextField generalRingStackSizeTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox logMoreCheckBox;
    private javax.swing.JCheckBox logOnlyErrorsToFileCheckBox;
    private javax.swing.JCheckBox logRedrawCheckBox;
    private javax.swing.JCheckBox logToFileCheckBox;
    private javax.swing.JCheckBox mouseCoordinatesCheckBox;
    private javax.swing.JCheckBox nodeCollectionAutoDisposeOnDoubleClickCheckBox;
    private javax.swing.JCheckBox nodeCountCheckBox;
    private javax.swing.JCheckBox redrawCounterCheckBox;
    private javax.swing.JCheckBox startGUICheckBox;
    private javax.swing.JCheckBox targetCoordinatesCheckBox;
    private javax.swing.JCheckBox useNimbusLAFCheckBox;
    // End of variables declaration//GEN-END:variables
}
