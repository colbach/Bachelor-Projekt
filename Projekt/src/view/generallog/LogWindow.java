package view.generallog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import javax.swing.Timer;
import log.AdditionalOut;
import log.Logging;
import view.listener.InputManager;

public class LogWindow extends javax.swing.JFrame implements ActionListener {
    
    private final Timer timer;
    private final InputManager inputManager;
    
    private long lastCounter = -1;
    private Logging logger = Logging.getGeneralInstance();
    
    /**
     * Event fuer Timer.
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        long counter = logger.getCounter();
        if(counter != lastCounter) {
            this.repaint();
            this.lastCounter = counter;
        }
    }
    
    /**
     * Creates new form LogWindow
     */
    public LogWindow() {
        initComponents();
        this.timer = new Timer(200, this);
        this.timer.start();
        this.inputManager = new InputManager();
        this.inputManager.addListener(logPanel.getScrollbar());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logPanel = new view.sharedcomponents.LogPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Log-Ausgabe");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        logPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                logPanelMouseDragged(evt);
            }
        });
        logPanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                logPanelMouseWheelMoved(evt);
            }
        });
        logPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                logPanelMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 322, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logPanelMousePressed
        inputManager.mousePressed(evt.getX(), evt.getY(), evt.getButton() == MouseEvent.BUTTON1);
        repaint();
    }//GEN-LAST:event_logPanelMousePressed

    private void logPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logPanelMouseReleased
        inputManager.mouseReleased(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_logPanelMouseReleased

    private void logPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logPanelMouseDragged
        inputManager.mouseDragged(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_logPanelMouseDragged

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        AdditionalOut.println("Scrollbar-Area von LogPanel wird aktualisiert");
        logPanel.scrollbarNeedsAreaUpdate();
    }//GEN-LAST:event_formComponentResized

    private void logPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_logPanelMouseWheelMoved
        inputManager.mouseMouseWheelMoved(evt.getUnitsToScroll());
        repaint();
    }//GEN-LAST:event_logPanelMouseWheelMoved

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.sharedcomponents.LogPanel logPanel;
    // End of variables declaration//GEN-END:variables

}
