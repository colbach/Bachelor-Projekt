/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.nodecollection;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.BadLocationException;
import reflection.NodeDefinition;
import view.listener.InputManager;
import view.listener.MouseAndKeyboardListener;
import view.main.MainWindow;

/**
 *
 * @author christiancolbach
 */
public class NodeCollectionWindow extends javax.swing.JFrame {

    private final InputManager inputmanager = new InputManager();
    private final MainWindow associatedMainWindow;

    /**
     * Creates new form NodeCollectionWindow
     */
    public NodeCollectionWindow(MainWindow associatedMainWindow) {
        initComponents();
        setTitle("Elemente");
        nodeCollectionOverviewPanel.setWindow(this);
        setBackground(Color.WHITE);
        this.associatedMainWindow = associatedMainWindow;
        inputmanager.addListener(nodeCollectionOverviewPanel.getScrollbar());
        inputmanager.addListener(new MouseAndKeyboardListener() {
            public boolean mousePressed(int x, int y) {
                return nodeCollectionOverviewPanel.mousePressed(x, y);
            }

            public boolean mouseReleased(int x, int y, int pressedX, int pressedY) {
                return nodeCollectionOverviewPanel.mouseReleased(x, y, pressedX, pressedY);
            }
        });
        nodeCollectionOverviewPanel.updateScrollbarArea();
        String[] categorys = nodeCollectionOverviewPanel.getCategorysAssArray();
        if(categorys != null) {
            categoryPanel.setCategorys(categorys);
        }
        searchStringInputField.getDocument().addDocumentListener(new DocumentListener() {
            public void update(DocumentEvent e) {
                try {
                    nodeCollectionOverviewPanel.searchDefinitions(e.getDocument().getText(0, e.getDocument().getLength()));
                } catch (BadLocationException ex) {
                    Logger.getLogger(NodeCollectionWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
                repaint();
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                update(e);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                update(e);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                update(e);
            }
        });
    }
    
    public void addNodeToProject(NodeDefinition node) {
        if(node != null) {
            associatedMainWindow.getProject().addNode(node, associatedMainWindow.getTargetX(), associatedMainWindow.getTargetY());
            associatedMainWindow.repaint();
            associatedMainWindow.targetPlusPlus();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchStringInputField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nodeCollectionOverviewPanel = new view.nodecollection.NodeCollectionOverviewPanel();
        categoryPanel = new view.nodecollection.CategoryPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        searchStringInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchStringInputFieldActionPerformed(evt);
            }
        });
        searchStringInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchStringInputFieldKeyTyped(evt);
            }
        });

        jLabel1.setText("Suchbegriff:");

        nodeCollectionOverviewPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMouseDragged(evt);
            }
        });
        nodeCollectionOverviewPanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                nodeCollectionOverviewPanelMouseWheelMoved(evt);
            }
        });
        nodeCollectionOverviewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nodeCollectionOverviewPanelMouseExited(evt);
            }
        });

        categoryPanel.setBackground(new java.awt.Color(255, 255, 255));
        categoryPanel.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N
        categoryPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                categoryPanelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout categoryPanelLayout = new javax.swing.GroupLayout(categoryPanel);
        categoryPanel.setLayout(categoryPanelLayout);
        categoryPanelLayout.setHorizontalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        categoryPanelLayout.setVerticalGroup(
            categoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchStringInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(nodeCollectionOverviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchStringInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(categoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nodeCollectionOverviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchStringInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchStringInputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchStringInputFieldActionPerformed

    private void nodeCollectionOverviewPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseMoved
        inputmanager.mouseMoved(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseMoved

    private void nodeCollectionOverviewPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMousePressed
        inputmanager.mousePressed(evt.getX(), evt.getY(), evt.getButton() == MouseEvent.BUTTON1);
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMousePressed

    private void nodeCollectionOverviewPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseReleased
        inputmanager.mouseReleased(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseReleased

    private void nodeCollectionOverviewPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseExited

    private void nodeCollectionOverviewPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseWheelMoved
        inputmanager.mouseMouseWheelMoved(evt.getUnitsToScroll());
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseWheelMoved

    private void nodeCollectionOverviewPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseDragged
        inputmanager.mouseDragged(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseDragged

    private void nodeCollectionOverviewPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nodeCollectionOverviewPanelMouseClicked
        inputmanager.mouseClicked(evt.getX(), evt.getY());
        repaint();
    }//GEN-LAST:event_nodeCollectionOverviewPanelMouseClicked

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        nodeCollectionOverviewPanel.updateScrollbarArea();
        repaint();
    }//GEN-LAST:event_formComponentResized

    private void searchStringInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchStringInputFieldKeyTyped
        //nodeCollectionOverviewPanel.searchDefinitions(searchStringInputField.getText());
        //repaint();
    }//GEN-LAST:event_searchStringInputFieldKeyTyped

    private void categoryPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryPanelMousePressed
        categoryPanel.mouseClick(evt.getX());
        String category = categoryPanel.getCategory();
        nodeCollectionOverviewPanel.setCategory(category);
        repaint();
    }//GEN-LAST:event_categoryPanelMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.nodecollection.CategoryPanel categoryPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private view.nodecollection.NodeCollectionOverviewPanel nodeCollectionOverviewPanel;
    private javax.swing.JTextField searchStringInputField;
    // End of variables declaration//GEN-END:variables
}
